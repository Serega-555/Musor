# 1. Создать классы Person и служащий Employee. 
# Класс Person является родительским, и содержит следующие данные: имя, фамилия, год рождения.
# Класс Employee является дочерним, и содержит трудовой стаж, а также метод, вычисляющий оклад в зависимости от возраста и стажа.

# Необходимо:
# - создать соответствующие конструкторы 
# - использовать соответствующие модификаторы доступа для членов класса

# 2. Создать классы Computer, PersonalComputer, Server. 
# Computer имеет следующие параметры:
# - процессор 
# - ОЗУ 
# - объем жесткого диска
# PersonalComputer имеет параметр «монитор». Server имеет параметр «количество процессоров». Оба эти класса также содержать метод, который вычисляет стоимость компьютера в зависимости от параметров. 

# Также необходимо:
# - создать соответствующие конструкторы 
# - использовать соответствующие модификаторы доступа для членов класса

class Car:

    def _start_engine(self):
        return "Engine's sound."

    def run(self):
        return self._start_engine()


if __name__ == '__main__':
    car = Car()

    assert "Engine's sound." == car.run()
    assert "Engine's sound." == car._start_engine()